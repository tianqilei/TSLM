Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Model
Rule 1     empty -> <empty>
Rule 2     Identifier -> IDENTIFIER
Rule 3     ClassIdentifier -> IDENTIFIER
Rule 4     BlockIdentifier -> IDENTIFIER
Rule 5     EventPath -> IDENTIFIER POINT IDENTIFIER
Rule 6     AndCommercialEvenPathStar -> empty
Rule 7     AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath AndCommercialEvenPathStar
Rule 8     MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar
Rule 9     EventIdentifierInSynchronization -> IDENTIFIER
Rule 10    Synchronization -> MacroEventDefinition
Rule 11    SynchronizationStar -> empty
Rule 12    SynchronizationStar -> Synchronization SynchronizationStar
Rule 13    SynchronizationClause -> SYNCHRONIZATION SynchronizationStar
Rule 14    ClassNameIdentifier -> IDENTIFIER
Rule 15    ClassInstanceIdentifier -> IDENTIFIER
Rule 16    ClassInstanceVirguleIdentifierStar -> empty
Rule 17    ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
Rule 18    ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
Rule 19    ComposedBlockClause -> Block
Rule 20    ComposedBlockClause -> ClassInstance
Rule 21    ComposedBlockClause -> Block ComposedBlockClause
Rule 22    ComposedBlockClause -> ClassInstance ComposedBlockClause
Rule 23    StateIdentifier -> IDENTIFIER
Rule 24    Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition
Rule 25    OriginalStateIdentifierInTransition -> IDENTIFIER
Rule 26    DestStateIdentifierInTransition -> IDENTIFIER
Rule 27    EventIdentifierInTransition -> IDENTIFIER
Rule 28    TransitionStar -> empty
Rule 29    TransitionStar -> Transition TransitionStar
Rule 30    TransitionClause -> TRANSITION TransitionStar
Rule 31    EventClauseInClass -> EVENT EventIdentifierInClass EventVirguleIdentifierStarInClass
Rule 32    EventIdentifierInClass -> IDENTIFIER
Rule 33    EventClauseInBlock -> EVENT EventIdentifierInBlock EventVirguleIdentifierStarInBlock
Rule 34    EventVirguleIdentifierStarInBlock -> empty
Rule 35    EventVirguleIdentifierStarInBlock -> VIRGULE EventIdentifierInBlock EventVirguleIdentifierStarInBlock
Rule 36    EventIdentifierInBlock -> IDENTIFIER
Rule 37    StateClause -> STATE StateIdentifier StateVirguleIdentifierStar
Rule 38    EventVirguleIdentifierStarInClass -> empty
Rule 39    EventVirguleIdentifierStarInClass -> VIRGULE EventIdentifierInClass EventVirguleIdentifierStarInClass
Rule 40    StateVirguleIdentifierStar -> empty
Rule 41    StateVirguleIdentifierStar -> VIRGULE StateIdentifier StateVirguleIdentifierStar
Rule 42    ObserverStar -> empty
Rule 43    ObserverClauseQuestionMark -> empty
Rule 44    ObserverClauseQuestionMark -> OBSERVER ObserverStar
Rule 45    InternalBlockBody -> ComposedBlockClause EventClauseInBlock SynchronizationClause ObserverClauseQuestionMark
Rule 46    BasicBlockBody -> StateClause EventClauseInClass TransitionClause ObserverClauseQuestionMark
Rule 47    BlockBody -> BasicBlockBody
Rule 48    BlockBody -> InternalBlockBody
Rule 49    EndBlock -> END
Rule 50    EndClass -> END
Rule 51    Class -> CLASS ClassIdentifier BlockBody EndClass
Rule 52    Block -> BLOCK BlockIdentifier BlockBody EndBlock
Rule 53    Model -> Block Model
Rule 54    Model -> Class Model
Rule 55    Model -> empty

Terminals, with rules where they appear

ANDCOMMERCIAL        : 7
BLOCK                : 52
CLASS                : 51
DEUXPOINTS           : 8 24
END                  : 49 50
EVENT                : 31 33
FLECHE               : 24
IDENTIFIER           : 2 3 4 5 5 9 14 15 23 25 26 27 32 36
OBSERVER             : 44
POINT                : 5
STATE                : 37
SYNCHRONIZATION      : 13
TRANSITION           : 30
VIRGULE              : 17 35 39 41
error                : 

Nonterminals, with rules where they appear

AndCommercialEvenPathStar : 7 8
BasicBlockBody       : 47
Block                : 19 21 53
BlockBody            : 51 52
BlockIdentifier      : 52
Class                : 54
ClassIdentifier      : 51
ClassInstance        : 20 22
ClassInstanceIdentifier : 17 18
ClassInstanceVirguleIdentifierStar : 17 18
ClassNameIdentifier  : 18
ComposedBlockClause  : 21 22 45
DestStateIdentifierInTransition : 24
EndBlock             : 52
EndClass             : 51
EventClauseInBlock   : 45
EventClauseInClass   : 46
EventIdentifierInBlock : 33 35
EventIdentifierInClass : 31 39
EventIdentifierInSynchronization : 8
EventIdentifierInTransition : 24
EventPath            : 7 8
EventVirguleIdentifierStarInBlock : 33 35
EventVirguleIdentifierStarInClass : 31 39
Identifier           : 
InternalBlockBody    : 48
MacroEventDefinition : 10
Model                : 53 54 0
ObserverClauseQuestionMark : 45 46
ObserverStar         : 44
OriginalStateIdentifierInTransition : 24
StateClause          : 46
StateIdentifier      : 37 41
StateVirguleIdentifierStar : 37 41
Synchronization      : 12
SynchronizationClause : 45
SynchronizationStar  : 12 13
Transition           : 29
TransitionClause     : 46
TransitionStar       : 29 30
empty                : 6 11 16 28 34 38 40 42 43 55

Parsing method: LALR

state 0

    (0) S' -> . Model
    (53) Model -> . Block Model
    (54) Model -> . Class Model
    (55) Model -> . empty
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (51) Class -> . CLASS ClassIdentifier BlockBody EndClass
    (1) empty -> .

    BLOCK           shift and go to state 4
    CLASS           shift and go to state 2
    $end            reduce using rule 1 (empty -> .)

    Block                          shift and go to state 1
    Model                          shift and go to state 3
    empty                          shift and go to state 5
    Class                          shift and go to state 6

state 1

    (53) Model -> Block . Model
    (53) Model -> . Block Model
    (54) Model -> . Class Model
    (55) Model -> . empty
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (51) Class -> . CLASS ClassIdentifier BlockBody EndClass
    (1) empty -> .

    BLOCK           shift and go to state 4
    CLASS           shift and go to state 2
    $end            reduce using rule 1 (empty -> .)

    Block                          shift and go to state 1
    Model                          shift and go to state 7
    empty                          shift and go to state 5
    Class                          shift and go to state 6

state 2

    (51) Class -> CLASS . ClassIdentifier BlockBody EndClass
    (3) ClassIdentifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 8

    ClassIdentifier                shift and go to state 9

state 3

    (0) S' -> Model .



state 4

    (52) Block -> BLOCK . BlockIdentifier BlockBody EndBlock
    (4) BlockIdentifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 11

    BlockIdentifier                shift and go to state 10

state 5

    (55) Model -> empty .

    $end            reduce using rule 55 (Model -> empty .)


state 6

    (54) Model -> Class . Model
    (53) Model -> . Block Model
    (54) Model -> . Class Model
    (55) Model -> . empty
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (51) Class -> . CLASS ClassIdentifier BlockBody EndClass
    (1) empty -> .

    BLOCK           shift and go to state 4
    CLASS           shift and go to state 2
    $end            reduce using rule 1 (empty -> .)

    Block                          shift and go to state 1
    Model                          shift and go to state 12
    Class                          shift and go to state 6
    empty                          shift and go to state 5

state 7

    (53) Model -> Block Model .

    $end            reduce using rule 53 (Model -> Block Model .)


state 8

    (3) ClassIdentifier -> IDENTIFIER .

    STATE           reduce using rule 3 (ClassIdentifier -> IDENTIFIER .)
    BLOCK           reduce using rule 3 (ClassIdentifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 3 (ClassIdentifier -> IDENTIFIER .)


state 9

    (51) Class -> CLASS ClassIdentifier . BlockBody EndClass
    (47) BlockBody -> . BasicBlockBody
    (48) BlockBody -> . InternalBlockBody
    (46) BasicBlockBody -> . StateClause EventClauseInClass TransitionClause ObserverClauseQuestionMark
    (45) InternalBlockBody -> . ComposedBlockClause EventClauseInBlock SynchronizationClause ObserverClauseQuestionMark
    (37) StateClause -> . STATE StateIdentifier StateVirguleIdentifierStar
    (19) ComposedBlockClause -> . Block
    (20) ComposedBlockClause -> . ClassInstance
    (21) ComposedBlockClause -> . Block ComposedBlockClause
    (22) ComposedBlockClause -> . ClassInstance ComposedBlockClause
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (18) ClassInstance -> . ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (14) ClassNameIdentifier -> . IDENTIFIER

    STATE           shift and go to state 18
    BLOCK           shift and go to state 4
    IDENTIFIER      shift and go to state 15

    StateClause                    shift and go to state 13
    ClassInstance                  shift and go to state 19
    Block                          shift and go to state 21
    BlockBody                      shift and go to state 20
    ClassNameIdentifier            shift and go to state 14
    InternalBlockBody              shift and go to state 16
    BasicBlockBody                 shift and go to state 17
    ComposedBlockClause            shift and go to state 22

state 10

    (52) Block -> BLOCK BlockIdentifier . BlockBody EndBlock
    (47) BlockBody -> . BasicBlockBody
    (48) BlockBody -> . InternalBlockBody
    (46) BasicBlockBody -> . StateClause EventClauseInClass TransitionClause ObserverClauseQuestionMark
    (45) InternalBlockBody -> . ComposedBlockClause EventClauseInBlock SynchronizationClause ObserverClauseQuestionMark
    (37) StateClause -> . STATE StateIdentifier StateVirguleIdentifierStar
    (19) ComposedBlockClause -> . Block
    (20) ComposedBlockClause -> . ClassInstance
    (21) ComposedBlockClause -> . Block ComposedBlockClause
    (22) ComposedBlockClause -> . ClassInstance ComposedBlockClause
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (18) ClassInstance -> . ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (14) ClassNameIdentifier -> . IDENTIFIER

    STATE           shift and go to state 18
    BLOCK           shift and go to state 4
    IDENTIFIER      shift and go to state 15

    StateClause                    shift and go to state 13
    ClassInstance                  shift and go to state 19
    ClassNameIdentifier            shift and go to state 14
    BlockBody                      shift and go to state 23
    InternalBlockBody              shift and go to state 16
    BasicBlockBody                 shift and go to state 17
    Block                          shift and go to state 21
    ComposedBlockClause            shift and go to state 22

state 11

    (4) BlockIdentifier -> IDENTIFIER .

    STATE           reduce using rule 4 (BlockIdentifier -> IDENTIFIER .)
    BLOCK           reduce using rule 4 (BlockIdentifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 4 (BlockIdentifier -> IDENTIFIER .)


state 12

    (54) Model -> Class Model .

    $end            reduce using rule 54 (Model -> Class Model .)


state 13

    (46) BasicBlockBody -> StateClause . EventClauseInClass TransitionClause ObserverClauseQuestionMark
    (31) EventClauseInClass -> . EVENT EventIdentifierInClass EventVirguleIdentifierStarInClass

    EVENT           shift and go to state 24

    EventClauseInClass             shift and go to state 25

state 14

    (18) ClassInstance -> ClassNameIdentifier . ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (15) ClassInstanceIdentifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 27

    ClassInstanceIdentifier        shift and go to state 26

state 15

    (14) ClassNameIdentifier -> IDENTIFIER .

    IDENTIFIER      reduce using rule 14 (ClassNameIdentifier -> IDENTIFIER .)


state 16

    (48) BlockBody -> InternalBlockBody .

    END             reduce using rule 48 (BlockBody -> InternalBlockBody .)


state 17

    (47) BlockBody -> BasicBlockBody .

    END             reduce using rule 47 (BlockBody -> BasicBlockBody .)


state 18

    (37) StateClause -> STATE . StateIdentifier StateVirguleIdentifierStar
    (23) StateIdentifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    StateIdentifier                shift and go to state 28

state 19

    (20) ComposedBlockClause -> ClassInstance .
    (22) ComposedBlockClause -> ClassInstance . ComposedBlockClause
    (19) ComposedBlockClause -> . Block
    (20) ComposedBlockClause -> . ClassInstance
    (21) ComposedBlockClause -> . Block ComposedBlockClause
    (22) ComposedBlockClause -> . ClassInstance ComposedBlockClause
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (18) ClassInstance -> . ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (14) ClassNameIdentifier -> . IDENTIFIER

    EVENT           reduce using rule 20 (ComposedBlockClause -> ClassInstance .)
    BLOCK           shift and go to state 4
    IDENTIFIER      shift and go to state 15

    Block                          shift and go to state 21
    ClassInstance                  shift and go to state 19
    ClassNameIdentifier            shift and go to state 14
    ComposedBlockClause            shift and go to state 30

state 20

    (51) Class -> CLASS ClassIdentifier BlockBody . EndClass
    (50) EndClass -> . END

    END             shift and go to state 32

    EndClass                       shift and go to state 31

state 21

    (19) ComposedBlockClause -> Block .
    (21) ComposedBlockClause -> Block . ComposedBlockClause
    (19) ComposedBlockClause -> . Block
    (20) ComposedBlockClause -> . ClassInstance
    (21) ComposedBlockClause -> . Block ComposedBlockClause
    (22) ComposedBlockClause -> . ClassInstance ComposedBlockClause
    (52) Block -> . BLOCK BlockIdentifier BlockBody EndBlock
    (18) ClassInstance -> . ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (14) ClassNameIdentifier -> . IDENTIFIER

    EVENT           reduce using rule 19 (ComposedBlockClause -> Block .)
    BLOCK           shift and go to state 4
    IDENTIFIER      shift and go to state 15

    Block                          shift and go to state 21
    ClassInstance                  shift and go to state 19
    ClassNameIdentifier            shift and go to state 14
    ComposedBlockClause            shift and go to state 33

state 22

    (45) InternalBlockBody -> ComposedBlockClause . EventClauseInBlock SynchronizationClause ObserverClauseQuestionMark
    (33) EventClauseInBlock -> . EVENT EventIdentifierInBlock EventVirguleIdentifierStarInBlock

    EVENT           shift and go to state 35

    EventClauseInBlock             shift and go to state 34

state 23

    (52) Block -> BLOCK BlockIdentifier BlockBody . EndBlock
    (49) EndBlock -> . END

    END             shift and go to state 37

    EndBlock                       shift and go to state 36

state 24

    (31) EventClauseInClass -> EVENT . EventIdentifierInClass EventVirguleIdentifierStarInClass
    (32) EventIdentifierInClass -> . IDENTIFIER

    IDENTIFIER      shift and go to state 39

    EventIdentifierInClass         shift and go to state 38

state 25

    (46) BasicBlockBody -> StateClause EventClauseInClass . TransitionClause ObserverClauseQuestionMark
    (30) TransitionClause -> . TRANSITION TransitionStar

    TRANSITION      shift and go to state 40

    TransitionClause               shift and go to state 41

state 26

    (18) ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier . ClassInstanceVirguleIdentifierStar
    (16) ClassInstanceVirguleIdentifierStar -> . empty
    (17) ClassInstanceVirguleIdentifierStar -> . VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (1) empty -> .

    VIRGULE         shift and go to state 43
    BLOCK           reduce using rule 1 (empty -> .)
    IDENTIFIER      reduce using rule 1 (empty -> .)
    EVENT           reduce using rule 1 (empty -> .)

    ClassInstanceVirguleIdentifierStar shift and go to state 42
    empty                          shift and go to state 44

state 27

    (15) ClassInstanceIdentifier -> IDENTIFIER .

    VIRGULE         reduce using rule 15 (ClassInstanceIdentifier -> IDENTIFIER .)
    BLOCK           reduce using rule 15 (ClassInstanceIdentifier -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 15 (ClassInstanceIdentifier -> IDENTIFIER .)
    EVENT           reduce using rule 15 (ClassInstanceIdentifier -> IDENTIFIER .)


state 28

    (37) StateClause -> STATE StateIdentifier . StateVirguleIdentifierStar
    (40) StateVirguleIdentifierStar -> . empty
    (41) StateVirguleIdentifierStar -> . VIRGULE StateIdentifier StateVirguleIdentifierStar
    (1) empty -> .

    VIRGULE         shift and go to state 46
    EVENT           reduce using rule 1 (empty -> .)

    StateVirguleIdentifierStar     shift and go to state 45
    empty                          shift and go to state 47

state 29

    (23) StateIdentifier -> IDENTIFIER .

    VIRGULE         reduce using rule 23 (StateIdentifier -> IDENTIFIER .)
    EVENT           reduce using rule 23 (StateIdentifier -> IDENTIFIER .)


state 30

    (22) ComposedBlockClause -> ClassInstance ComposedBlockClause .

    EVENT           reduce using rule 22 (ComposedBlockClause -> ClassInstance ComposedBlockClause .)


state 31

    (51) Class -> CLASS ClassIdentifier BlockBody EndClass .

    BLOCK           reduce using rule 51 (Class -> CLASS ClassIdentifier BlockBody EndClass .)
    CLASS           reduce using rule 51 (Class -> CLASS ClassIdentifier BlockBody EndClass .)
    $end            reduce using rule 51 (Class -> CLASS ClassIdentifier BlockBody EndClass .)


state 32

    (50) EndClass -> END .

    BLOCK           reduce using rule 50 (EndClass -> END .)
    CLASS           reduce using rule 50 (EndClass -> END .)
    $end            reduce using rule 50 (EndClass -> END .)


state 33

    (21) ComposedBlockClause -> Block ComposedBlockClause .

    EVENT           reduce using rule 21 (ComposedBlockClause -> Block ComposedBlockClause .)


state 34

    (45) InternalBlockBody -> ComposedBlockClause EventClauseInBlock . SynchronizationClause ObserverClauseQuestionMark
    (13) SynchronizationClause -> . SYNCHRONIZATION SynchronizationStar

    SYNCHRONIZATION shift and go to state 49

    SynchronizationClause          shift and go to state 48

state 35

    (33) EventClauseInBlock -> EVENT . EventIdentifierInBlock EventVirguleIdentifierStarInBlock
    (36) EventIdentifierInBlock -> . IDENTIFIER

    IDENTIFIER      shift and go to state 51

    EventIdentifierInBlock         shift and go to state 50

state 36

    (52) Block -> BLOCK BlockIdentifier BlockBody EndBlock .

    BLOCK           reduce using rule 52 (Block -> BLOCK BlockIdentifier BlockBody EndBlock .)
    CLASS           reduce using rule 52 (Block -> BLOCK BlockIdentifier BlockBody EndBlock .)
    $end            reduce using rule 52 (Block -> BLOCK BlockIdentifier BlockBody EndBlock .)
    IDENTIFIER      reduce using rule 52 (Block -> BLOCK BlockIdentifier BlockBody EndBlock .)
    EVENT           reduce using rule 52 (Block -> BLOCK BlockIdentifier BlockBody EndBlock .)


state 37

    (49) EndBlock -> END .

    BLOCK           reduce using rule 49 (EndBlock -> END .)
    CLASS           reduce using rule 49 (EndBlock -> END .)
    $end            reduce using rule 49 (EndBlock -> END .)
    IDENTIFIER      reduce using rule 49 (EndBlock -> END .)
    EVENT           reduce using rule 49 (EndBlock -> END .)


state 38

    (31) EventClauseInClass -> EVENT EventIdentifierInClass . EventVirguleIdentifierStarInClass
    (38) EventVirguleIdentifierStarInClass -> . empty
    (39) EventVirguleIdentifierStarInClass -> . VIRGULE EventIdentifierInClass EventVirguleIdentifierStarInClass
    (1) empty -> .

    VIRGULE         shift and go to state 54
    TRANSITION      reduce using rule 1 (empty -> .)

    EventVirguleIdentifierStarInClass shift and go to state 52
    empty                          shift and go to state 53

state 39

    (32) EventIdentifierInClass -> IDENTIFIER .

    VIRGULE         reduce using rule 32 (EventIdentifierInClass -> IDENTIFIER .)
    TRANSITION      reduce using rule 32 (EventIdentifierInClass -> IDENTIFIER .)


state 40

    (30) TransitionClause -> TRANSITION . TransitionStar
    (28) TransitionStar -> . empty
    (29) TransitionStar -> . Transition TransitionStar
    (1) empty -> .
    (24) Transition -> . EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition
    (27) EventIdentifierInTransition -> . IDENTIFIER

    OBSERVER        reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    IDENTIFIER      shift and go to state 57

    EventIdentifierInTransition    shift and go to state 55
    TransitionStar                 shift and go to state 56
    empty                          shift and go to state 58
    Transition                     shift and go to state 59

state 41

    (46) BasicBlockBody -> StateClause EventClauseInClass TransitionClause . ObserverClauseQuestionMark
    (43) ObserverClauseQuestionMark -> . empty
    (44) ObserverClauseQuestionMark -> . OBSERVER ObserverStar
    (1) empty -> .

    OBSERVER        shift and go to state 60
    END             reduce using rule 1 (empty -> .)

    ObserverClauseQuestionMark     shift and go to state 61
    empty                          shift and go to state 62

state 42

    (18) ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .

    BLOCK           reduce using rule 18 (ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .)
    IDENTIFIER      reduce using rule 18 (ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .)
    EVENT           reduce using rule 18 (ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .)


state 43

    (17) ClassInstanceVirguleIdentifierStar -> VIRGULE . ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (15) ClassInstanceIdentifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 27

    ClassInstanceIdentifier        shift and go to state 63

state 44

    (16) ClassInstanceVirguleIdentifierStar -> empty .

    BLOCK           reduce using rule 16 (ClassInstanceVirguleIdentifierStar -> empty .)
    IDENTIFIER      reduce using rule 16 (ClassInstanceVirguleIdentifierStar -> empty .)
    EVENT           reduce using rule 16 (ClassInstanceVirguleIdentifierStar -> empty .)


state 45

    (37) StateClause -> STATE StateIdentifier StateVirguleIdentifierStar .

    EVENT           reduce using rule 37 (StateClause -> STATE StateIdentifier StateVirguleIdentifierStar .)


state 46

    (41) StateVirguleIdentifierStar -> VIRGULE . StateIdentifier StateVirguleIdentifierStar
    (23) StateIdentifier -> . IDENTIFIER

    IDENTIFIER      shift and go to state 29

    StateIdentifier                shift and go to state 64

state 47

    (40) StateVirguleIdentifierStar -> empty .

    EVENT           reduce using rule 40 (StateVirguleIdentifierStar -> empty .)


state 48

    (45) InternalBlockBody -> ComposedBlockClause EventClauseInBlock SynchronizationClause . ObserverClauseQuestionMark
    (43) ObserverClauseQuestionMark -> . empty
    (44) ObserverClauseQuestionMark -> . OBSERVER ObserverStar
    (1) empty -> .

    OBSERVER        shift and go to state 60
    END             reduce using rule 1 (empty -> .)

    ObserverClauseQuestionMark     shift and go to state 65
    empty                          shift and go to state 62

state 49

    (13) SynchronizationClause -> SYNCHRONIZATION . SynchronizationStar
    (11) SynchronizationStar -> . empty
    (12) SynchronizationStar -> . Synchronization SynchronizationStar
    (1) empty -> .
    (10) Synchronization -> . MacroEventDefinition
    (8) MacroEventDefinition -> . EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar
    (9) EventIdentifierInSynchronization -> . IDENTIFIER

    OBSERVER        reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    IDENTIFIER      shift and go to state 66

    MacroEventDefinition           shift and go to state 68
    Synchronization                shift and go to state 71
    SynchronizationStar            shift and go to state 69
    EventIdentifierInSynchronization shift and go to state 67
    empty                          shift and go to state 70

state 50

    (33) EventClauseInBlock -> EVENT EventIdentifierInBlock . EventVirguleIdentifierStarInBlock
    (34) EventVirguleIdentifierStarInBlock -> . empty
    (35) EventVirguleIdentifierStarInBlock -> . VIRGULE EventIdentifierInBlock EventVirguleIdentifierStarInBlock
    (1) empty -> .

    VIRGULE         shift and go to state 72
    SYNCHRONIZATION reduce using rule 1 (empty -> .)

    EventVirguleIdentifierStarInBlock shift and go to state 73
    empty                          shift and go to state 74

state 51

    (36) EventIdentifierInBlock -> IDENTIFIER .

    VIRGULE         reduce using rule 36 (EventIdentifierInBlock -> IDENTIFIER .)
    SYNCHRONIZATION reduce using rule 36 (EventIdentifierInBlock -> IDENTIFIER .)


state 52

    (31) EventClauseInClass -> EVENT EventIdentifierInClass EventVirguleIdentifierStarInClass .

    TRANSITION      reduce using rule 31 (EventClauseInClass -> EVENT EventIdentifierInClass EventVirguleIdentifierStarInClass .)


state 53

    (38) EventVirguleIdentifierStarInClass -> empty .

    TRANSITION      reduce using rule 38 (EventVirguleIdentifierStarInClass -> empty .)


state 54

    (39) EventVirguleIdentifierStarInClass -> VIRGULE . EventIdentifierInClass EventVirguleIdentifierStarInClass
    (32) EventIdentifierInClass -> . IDENTIFIER

    IDENTIFIER      shift and go to state 39

    EventIdentifierInClass         shift and go to state 75

state 55

    (24) Transition -> EventIdentifierInTransition . DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition

    DEUXPOINTS      shift and go to state 76


state 56

    (30) TransitionClause -> TRANSITION TransitionStar .

    OBSERVER        reduce using rule 30 (TransitionClause -> TRANSITION TransitionStar .)
    END             reduce using rule 30 (TransitionClause -> TRANSITION TransitionStar .)


state 57

    (27) EventIdentifierInTransition -> IDENTIFIER .

    DEUXPOINTS      reduce using rule 27 (EventIdentifierInTransition -> IDENTIFIER .)


state 58

    (28) TransitionStar -> empty .

    OBSERVER        reduce using rule 28 (TransitionStar -> empty .)
    END             reduce using rule 28 (TransitionStar -> empty .)


state 59

    (29) TransitionStar -> Transition . TransitionStar
    (28) TransitionStar -> . empty
    (29) TransitionStar -> . Transition TransitionStar
    (1) empty -> .
    (24) Transition -> . EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition
    (27) EventIdentifierInTransition -> . IDENTIFIER

    OBSERVER        reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    IDENTIFIER      shift and go to state 57

    EventIdentifierInTransition    shift and go to state 55
    TransitionStar                 shift and go to state 77
    empty                          shift and go to state 58
    Transition                     shift and go to state 59

state 60

    (44) ObserverClauseQuestionMark -> OBSERVER . ObserverStar
    (42) ObserverStar -> . empty
    (1) empty -> .

    END             reduce using rule 1 (empty -> .)

    ObserverStar                   shift and go to state 79
    empty                          shift and go to state 78

state 61

    (46) BasicBlockBody -> StateClause EventClauseInClass TransitionClause ObserverClauseQuestionMark .

    END             reduce using rule 46 (BasicBlockBody -> StateClause EventClauseInClass TransitionClause ObserverClauseQuestionMark .)


state 62

    (43) ObserverClauseQuestionMark -> empty .

    END             reduce using rule 43 (ObserverClauseQuestionMark -> empty .)


state 63

    (17) ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier . ClassInstanceVirguleIdentifierStar
    (16) ClassInstanceVirguleIdentifierStar -> . empty
    (17) ClassInstanceVirguleIdentifierStar -> . VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar
    (1) empty -> .

    VIRGULE         shift and go to state 43
    BLOCK           reduce using rule 1 (empty -> .)
    IDENTIFIER      reduce using rule 1 (empty -> .)
    EVENT           reduce using rule 1 (empty -> .)

    ClassInstanceVirguleIdentifierStar shift and go to state 80
    empty                          shift and go to state 44

state 64

    (41) StateVirguleIdentifierStar -> VIRGULE StateIdentifier . StateVirguleIdentifierStar
    (40) StateVirguleIdentifierStar -> . empty
    (41) StateVirguleIdentifierStar -> . VIRGULE StateIdentifier StateVirguleIdentifierStar
    (1) empty -> .

    VIRGULE         shift and go to state 46
    EVENT           reduce using rule 1 (empty -> .)

    StateVirguleIdentifierStar     shift and go to state 81
    empty                          shift and go to state 47

state 65

    (45) InternalBlockBody -> ComposedBlockClause EventClauseInBlock SynchronizationClause ObserverClauseQuestionMark .

    END             reduce using rule 45 (InternalBlockBody -> ComposedBlockClause EventClauseInBlock SynchronizationClause ObserverClauseQuestionMark .)


state 66

    (9) EventIdentifierInSynchronization -> IDENTIFIER .

    DEUXPOINTS      reduce using rule 9 (EventIdentifierInSynchronization -> IDENTIFIER .)


state 67

    (8) MacroEventDefinition -> EventIdentifierInSynchronization . DEUXPOINTS EventPath AndCommercialEvenPathStar

    DEUXPOINTS      shift and go to state 82


state 68

    (10) Synchronization -> MacroEventDefinition .

    IDENTIFIER      reduce using rule 10 (Synchronization -> MacroEventDefinition .)
    OBSERVER        reduce using rule 10 (Synchronization -> MacroEventDefinition .)
    END             reduce using rule 10 (Synchronization -> MacroEventDefinition .)


state 69

    (13) SynchronizationClause -> SYNCHRONIZATION SynchronizationStar .

    OBSERVER        reduce using rule 13 (SynchronizationClause -> SYNCHRONIZATION SynchronizationStar .)
    END             reduce using rule 13 (SynchronizationClause -> SYNCHRONIZATION SynchronizationStar .)


state 70

    (11) SynchronizationStar -> empty .

    OBSERVER        reduce using rule 11 (SynchronizationStar -> empty .)
    END             reduce using rule 11 (SynchronizationStar -> empty .)


state 71

    (12) SynchronizationStar -> Synchronization . SynchronizationStar
    (11) SynchronizationStar -> . empty
    (12) SynchronizationStar -> . Synchronization SynchronizationStar
    (1) empty -> .
    (10) Synchronization -> . MacroEventDefinition
    (8) MacroEventDefinition -> . EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar
    (9) EventIdentifierInSynchronization -> . IDENTIFIER

    OBSERVER        reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)
    IDENTIFIER      shift and go to state 66

    MacroEventDefinition           shift and go to state 68
    Synchronization                shift and go to state 71
    SynchronizationStar            shift and go to state 83
    EventIdentifierInSynchronization shift and go to state 67
    empty                          shift and go to state 70

state 72

    (35) EventVirguleIdentifierStarInBlock -> VIRGULE . EventIdentifierInBlock EventVirguleIdentifierStarInBlock
    (36) EventIdentifierInBlock -> . IDENTIFIER

    IDENTIFIER      shift and go to state 51

    EventIdentifierInBlock         shift and go to state 84

state 73

    (33) EventClauseInBlock -> EVENT EventIdentifierInBlock EventVirguleIdentifierStarInBlock .

    SYNCHRONIZATION reduce using rule 33 (EventClauseInBlock -> EVENT EventIdentifierInBlock EventVirguleIdentifierStarInBlock .)


state 74

    (34) EventVirguleIdentifierStarInBlock -> empty .

    SYNCHRONIZATION reduce using rule 34 (EventVirguleIdentifierStarInBlock -> empty .)


state 75

    (39) EventVirguleIdentifierStarInClass -> VIRGULE EventIdentifierInClass . EventVirguleIdentifierStarInClass
    (38) EventVirguleIdentifierStarInClass -> . empty
    (39) EventVirguleIdentifierStarInClass -> . VIRGULE EventIdentifierInClass EventVirguleIdentifierStarInClass
    (1) empty -> .

    VIRGULE         shift and go to state 54
    TRANSITION      reduce using rule 1 (empty -> .)

    EventVirguleIdentifierStarInClass shift and go to state 85
    empty                          shift and go to state 53

state 76

    (24) Transition -> EventIdentifierInTransition DEUXPOINTS . OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition
    (25) OriginalStateIdentifierInTransition -> . IDENTIFIER

    IDENTIFIER      shift and go to state 87

    OriginalStateIdentifierInTransition shift and go to state 86

state 77

    (29) TransitionStar -> Transition TransitionStar .

    OBSERVER        reduce using rule 29 (TransitionStar -> Transition TransitionStar .)
    END             reduce using rule 29 (TransitionStar -> Transition TransitionStar .)


state 78

    (42) ObserverStar -> empty .

    END             reduce using rule 42 (ObserverStar -> empty .)


state 79

    (44) ObserverClauseQuestionMark -> OBSERVER ObserverStar .

    END             reduce using rule 44 (ObserverClauseQuestionMark -> OBSERVER ObserverStar .)


state 80

    (17) ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .

    BLOCK           reduce using rule 17 (ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .)
    IDENTIFIER      reduce using rule 17 (ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .)
    EVENT           reduce using rule 17 (ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar .)


state 81

    (41) StateVirguleIdentifierStar -> VIRGULE StateIdentifier StateVirguleIdentifierStar .

    EVENT           reduce using rule 41 (StateVirguleIdentifierStar -> VIRGULE StateIdentifier StateVirguleIdentifierStar .)


state 82

    (8) MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS . EventPath AndCommercialEvenPathStar
    (5) EventPath -> . IDENTIFIER POINT IDENTIFIER

    IDENTIFIER      shift and go to state 88

    EventPath                      shift and go to state 89

state 83

    (12) SynchronizationStar -> Synchronization SynchronizationStar .

    OBSERVER        reduce using rule 12 (SynchronizationStar -> Synchronization SynchronizationStar .)
    END             reduce using rule 12 (SynchronizationStar -> Synchronization SynchronizationStar .)


state 84

    (35) EventVirguleIdentifierStarInBlock -> VIRGULE EventIdentifierInBlock . EventVirguleIdentifierStarInBlock
    (34) EventVirguleIdentifierStarInBlock -> . empty
    (35) EventVirguleIdentifierStarInBlock -> . VIRGULE EventIdentifierInBlock EventVirguleIdentifierStarInBlock
    (1) empty -> .

    VIRGULE         shift and go to state 72
    SYNCHRONIZATION reduce using rule 1 (empty -> .)

    EventVirguleIdentifierStarInBlock shift and go to state 90
    empty                          shift and go to state 74

state 85

    (39) EventVirguleIdentifierStarInClass -> VIRGULE EventIdentifierInClass EventVirguleIdentifierStarInClass .

    TRANSITION      reduce using rule 39 (EventVirguleIdentifierStarInClass -> VIRGULE EventIdentifierInClass EventVirguleIdentifierStarInClass .)


state 86

    (24) Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition . FLECHE DestStateIdentifierInTransition

    FLECHE          shift and go to state 91


state 87

    (25) OriginalStateIdentifierInTransition -> IDENTIFIER .

    FLECHE          reduce using rule 25 (OriginalStateIdentifierInTransition -> IDENTIFIER .)


state 88

    (5) EventPath -> IDENTIFIER . POINT IDENTIFIER

    POINT           shift and go to state 92


state 89

    (8) MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath . AndCommercialEvenPathStar
    (6) AndCommercialEvenPathStar -> . empty
    (7) AndCommercialEvenPathStar -> . ANDCOMMERCIAL EventPath AndCommercialEvenPathStar
    (1) empty -> .

    ANDCOMMERCIAL   shift and go to state 93
    IDENTIFIER      reduce using rule 1 (empty -> .)
    OBSERVER        reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)

    empty                          shift and go to state 94
    AndCommercialEvenPathStar      shift and go to state 95

state 90

    (35) EventVirguleIdentifierStarInBlock -> VIRGULE EventIdentifierInBlock EventVirguleIdentifierStarInBlock .

    SYNCHRONIZATION reduce using rule 35 (EventVirguleIdentifierStarInBlock -> VIRGULE EventIdentifierInBlock EventVirguleIdentifierStarInBlock .)


state 91

    (24) Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE . DestStateIdentifierInTransition
    (26) DestStateIdentifierInTransition -> . IDENTIFIER

    IDENTIFIER      shift and go to state 97

    DestStateIdentifierInTransition shift and go to state 96

state 92

    (5) EventPath -> IDENTIFIER POINT . IDENTIFIER

    IDENTIFIER      shift and go to state 98


state 93

    (7) AndCommercialEvenPathStar -> ANDCOMMERCIAL . EventPath AndCommercialEvenPathStar
    (5) EventPath -> . IDENTIFIER POINT IDENTIFIER

    IDENTIFIER      shift and go to state 88

    EventPath                      shift and go to state 99

state 94

    (6) AndCommercialEvenPathStar -> empty .

    IDENTIFIER      reduce using rule 6 (AndCommercialEvenPathStar -> empty .)
    OBSERVER        reduce using rule 6 (AndCommercialEvenPathStar -> empty .)
    END             reduce using rule 6 (AndCommercialEvenPathStar -> empty .)


state 95

    (8) MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar .

    IDENTIFIER      reduce using rule 8 (MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar .)
    OBSERVER        reduce using rule 8 (MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar .)
    END             reduce using rule 8 (MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar .)


state 96

    (24) Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition .

    IDENTIFIER      reduce using rule 24 (Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition .)
    OBSERVER        reduce using rule 24 (Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition .)
    END             reduce using rule 24 (Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition .)


state 97

    (26) DestStateIdentifierInTransition -> IDENTIFIER .

    IDENTIFIER      reduce using rule 26 (DestStateIdentifierInTransition -> IDENTIFIER .)
    OBSERVER        reduce using rule 26 (DestStateIdentifierInTransition -> IDENTIFIER .)
    END             reduce using rule 26 (DestStateIdentifierInTransition -> IDENTIFIER .)


state 98

    (5) EventPath -> IDENTIFIER POINT IDENTIFIER .

    ANDCOMMERCIAL   reduce using rule 5 (EventPath -> IDENTIFIER POINT IDENTIFIER .)
    IDENTIFIER      reduce using rule 5 (EventPath -> IDENTIFIER POINT IDENTIFIER .)
    OBSERVER        reduce using rule 5 (EventPath -> IDENTIFIER POINT IDENTIFIER .)
    END             reduce using rule 5 (EventPath -> IDENTIFIER POINT IDENTIFIER .)


state 99

    (7) AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath . AndCommercialEvenPathStar
    (6) AndCommercialEvenPathStar -> . empty
    (7) AndCommercialEvenPathStar -> . ANDCOMMERCIAL EventPath AndCommercialEvenPathStar
    (1) empty -> .

    ANDCOMMERCIAL   shift and go to state 93
    IDENTIFIER      reduce using rule 1 (empty -> .)
    OBSERVER        reduce using rule 1 (empty -> .)
    END             reduce using rule 1 (empty -> .)

    empty                          shift and go to state 94
    AndCommercialEvenPathStar      shift and go to state 100

state 100

    (7) AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath AndCommercialEvenPathStar .

    IDENTIFIER      reduce using rule 7 (AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath AndCommercialEvenPathStar .)
    OBSERVER        reduce using rule 7 (AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath AndCommercialEvenPathStar .)
    END             reduce using rule 7 (AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath AndCommercialEvenPathStar .)

