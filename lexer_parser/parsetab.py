
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = b'\xff\xb10p*\xaf\xdd3i\xabF@\xf1ZR\xe6'
    
_lr_action_items = {'VIRGULE':([22,23,30,31,36,37,45,60,62,],[35,-15,-23,42,48,-24,35,42,48,]),'BLOCK':([0,7,8,9,10,14,18,22,23,32,33,34,45,61,],[2,-3,2,2,-4,2,2,-1,-15,-43,-18,-16,-1,-17,]),'EVENT':([14,15,16,18,22,23,25,29,30,31,32,33,34,43,44,45,60,61,67,],[-19,26,26,-20,-1,-15,-21,-22,-23,-1,-43,-18,-16,-33,-36,-1,-1,-17,-37,]),'TRANSITION':([28,36,37,46,47,62,68,],[41,-1,-24,-34,-32,-1,-35,]),'DEUXPOINTS':([49,54,55,57,],[63,-9,-28,66,]),'CLASS':([0,],[1,]),'ANDCOMMERCIAL':([69,78,79,],[74,74,-5,]),'$end':([0,3,4,5,6,24,32,],[-1,-45,0,-46,-44,-42,-43,]),'END':([12,13,19,21,38,39,40,41,50,51,52,53,56,58,59,64,65,69,73,75,78,79,80,81,82,],[24,-41,-40,32,-1,-38,-39,-1,-1,-13,-10,-11,-1,-29,-31,-12,-30,-1,-6,-8,-1,-5,-27,-25,-7,]),'SYNCHRONIZATION':([27,36,37,46,47,62,68,],[38,-1,-24,-34,-32,-1,-35,]),'STATE':([7,8,9,10,],[-3,20,20,-4,]),'IDENTIFIER':([1,2,7,8,9,10,11,14,17,18,20,22,23,26,32,33,34,35,38,41,42,45,48,50,52,56,61,63,66,69,73,74,75,76,77,78,79,80,81,82,],[7,10,-3,17,17,-4,23,17,-14,17,30,-1,-15,37,-43,-18,-16,23,54,55,30,-1,37,54,-10,55,-17,70,71,-1,-6,70,-8,79,80,-1,-5,-27,-25,-7,]),'FLECHE':([71,72,],[-26,77,]),'POINT':([70,],[76,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ClassNameIdentifier':([8,9,14,18,],[11,11,11,11,]),'BlockBody':([8,9,],[12,21,]),'OriginalStateIdentifierInTransition':([66,],[72,]),'InternalBlockBody':([8,9,],[13,13,]),'MacroEventDefinition':([38,50,],[52,52,]),'Block':([0,8,9,14,18,],[6,14,14,14,14,]),'ComposedBlockClause':([8,9,14,18,],[15,15,25,29,]),'ClassInstanceIdentifier':([11,35,],[22,45,]),'StateVirguleIdentifierStar':([31,60,],[43,67,]),'StateClause':([8,9,],[16,16,]),'AndCommercialEvenPathStar':([69,78,],[75,82,]),'ClassInstanceVirguleIdentifierStar':([22,45,],[33,61,]),'ClassInstance':([8,9,14,18,],[18,18,18,18,]),'TransitionClause':([28,],[40,]),'EventIdentifierInSynchronization':([38,50,],[49,49,]),'BasicBlockBody':([8,9,],[19,19,]),'Synchronization':([38,50,],[50,50,]),'ClassIdentifier':([1,],[8,]),'EventIdentifier':([26,48,],[36,62,]),'empty':([0,22,31,36,38,41,45,50,56,60,62,69,78,],[5,34,44,46,53,58,34,53,58,44,46,73,73,]),'EventVirguleIdentifierStar':([36,62,],[47,68,]),'StateIdentifier':([20,42,],[31,60,]),'Class':([0,],[3,]),'TransitionStar':([41,56,],[59,65,]),'SynchronizationClause':([27,],[39,]),'DestStateIdentifierInTransition':([77,],[81,]),'BlockIdentifier':([2,],[9,]),'Transition':([41,56,],[56,56,]),'Model':([0,],[4,]),'EventIdentifierInTransition':([41,56,],[57,57,]),'SynchronizationStar':([38,50,],[51,64,]),'EventPath':([63,74,],[69,78,]),'EventClause':([15,16,],[27,28,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Model","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','/Users/tianqilei/PycharmProjects/TSLM/parser.py',23),
  ('Identifier -> IDENTIFIER','Identifier',1,'p_Identifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',27),
  ('ClassIdentifier -> IDENTIFIER','ClassIdentifier',1,'p_ClassIdentifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',30),
  ('BlockIdentifier -> IDENTIFIER','BlockIdentifier',1,'p_BlockIdentifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',34),
  ('EventPath -> IDENTIFIER POINT IDENTIFIER','EventPath',3,'p_EventPath','/Users/tianqilei/PycharmProjects/TSLM/parser.py',52),
  ('AndCommercialEvenPathStar -> empty','AndCommercialEvenPathStar',1,'p_AndCommercialEvenPathStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',71),
  ('AndCommercialEvenPathStar -> ANDCOMMERCIAL EventPath AndCommercialEvenPathStar','AndCommercialEvenPathStar',3,'p_AndCommercialEvenPathStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',72),
  ('MacroEventDefinition -> EventIdentifierInSynchronization DEUXPOINTS EventPath AndCommercialEvenPathStar','MacroEventDefinition',4,'p_MacroEventDefinition','/Users/tianqilei/PycharmProjects/TSLM/parser.py',75),
  ('EventIdentifierInSynchronization -> IDENTIFIER','EventIdentifierInSynchronization',1,'p_EventIdentifierInSynchronization','/Users/tianqilei/PycharmProjects/TSLM/parser.py',78),
  ('Synchronization -> MacroEventDefinition','Synchronization',1,'p_Synchronization','/Users/tianqilei/PycharmProjects/TSLM/parser.py',82),
  ('SynchronizationStar -> empty','SynchronizationStar',1,'p_SynchronizationStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',85),
  ('SynchronizationStar -> Synchronization SynchronizationStar','SynchronizationStar',2,'p_SynchronizationStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',86),
  ('SynchronizationClause -> SYNCHRONIZATION SynchronizationStar','SynchronizationClause',2,'p_SynchronizationClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',89),
  ('ClassNameIdentifier -> IDENTIFIER','ClassNameIdentifier',1,'p_ClassNameIdentifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',92),
  ('ClassInstanceIdentifier -> IDENTIFIER','ClassInstanceIdentifier',1,'p_ClassInstanceIdentifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',96),
  ('ClassInstanceVirguleIdentifierStar -> empty','ClassInstanceVirguleIdentifierStar',1,'p_ClassInstanceVirguleIdentifierStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',100),
  ('ClassInstanceVirguleIdentifierStar -> VIRGULE ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar','ClassInstanceVirguleIdentifierStar',3,'p_ClassInstanceVirguleIdentifierStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',101),
  ('ClassInstance -> ClassNameIdentifier ClassInstanceIdentifier ClassInstanceVirguleIdentifierStar','ClassInstance',3,'p_ClassInstance','/Users/tianqilei/PycharmProjects/TSLM/parser.py',105),
  ('ComposedBlockClause -> Block','ComposedBlockClause',1,'p_ComposedBlockClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',108),
  ('ComposedBlockClause -> ClassInstance','ComposedBlockClause',1,'p_ComposedBlockClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',109),
  ('ComposedBlockClause -> Block ComposedBlockClause','ComposedBlockClause',2,'p_ComposedBlockClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',110),
  ('ComposedBlockClause -> ClassInstance ComposedBlockClause','ComposedBlockClause',2,'p_ComposedBlockClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',111),
  ('StateIdentifier -> IDENTIFIER','StateIdentifier',1,'p_StateIdentifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',114),
  ('EventIdentifier -> IDENTIFIER','EventIdentifier',1,'p_EventIdentifier','/Users/tianqilei/PycharmProjects/TSLM/parser.py',118),
  ('Transition -> EventIdentifierInTransition DEUXPOINTS OriginalStateIdentifierInTransition FLECHE DestStateIdentifierInTransition','Transition',5,'p_Transition','/Users/tianqilei/PycharmProjects/TSLM/parser.py',122),
  ('OriginalStateIdentifierInTransition -> IDENTIFIER','OriginalStateIdentifierInTransition',1,'p_OriginalStateIdentifierInTransition','/Users/tianqilei/PycharmProjects/TSLM/parser.py',125),
  ('DestStateIdentifierInTransition -> IDENTIFIER','DestStateIdentifierInTransition',1,'p_DestStateIdentifierInTransition','/Users/tianqilei/PycharmProjects/TSLM/parser.py',129),
  ('EventIdentifierInTransition -> IDENTIFIER','EventIdentifierInTransition',1,'p_EventIdentifierInTransition','/Users/tianqilei/PycharmProjects/TSLM/parser.py',133),
  ('TransitionStar -> empty','TransitionStar',1,'p_TransitionStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',137),
  ('TransitionStar -> Transition TransitionStar','TransitionStar',2,'p_TransitionStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',138),
  ('TransitionClause -> TRANSITION TransitionStar','TransitionClause',2,'p_TransitionClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',141),
  ('EventClause -> EVENT EventIdentifier EventVirguleIdentifierStar','EventClause',3,'p_EventClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',144),
  ('StateClause -> STATE StateIdentifier StateVirguleIdentifierStar','StateClause',3,'p_StateClause','/Users/tianqilei/PycharmProjects/TSLM/parser.py',147),
  ('EventVirguleIdentifierStar -> empty','EventVirguleIdentifierStar',1,'p_EventVirguleIdentifierStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',150),
  ('EventVirguleIdentifierStar -> VIRGULE EventIdentifier EventVirguleIdentifierStar','EventVirguleIdentifierStar',3,'p_EventVirguleIdentifierStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',151),
  ('StateVirguleIdentifierStar -> empty','StateVirguleIdentifierStar',1,'p_StateVirguleIdentifierStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',154),
  ('StateVirguleIdentifierStar -> VIRGULE StateIdentifier StateVirguleIdentifierStar','StateVirguleIdentifierStar',3,'p_StateVirguleIdentifierStar','/Users/tianqilei/PycharmProjects/TSLM/parser.py',155),
  ('InternalBlockBody -> ComposedBlockClause EventClause SynchronizationClause','InternalBlockBody',3,'p_InternalBlockBody','/Users/tianqilei/PycharmProjects/TSLM/parser.py',158),
  ('BasicBlockBody -> StateClause EventClause TransitionClause','BasicBlockBody',3,'p_BasicBlockBody','/Users/tianqilei/PycharmProjects/TSLM/parser.py',162),
  ('BlockBody -> BasicBlockBody','BlockBody',1,'p_BlockBody','/Users/tianqilei/PycharmProjects/TSLM/parser.py',166),
  ('BlockBody -> InternalBlockBody','BlockBody',1,'p_BlockBody','/Users/tianqilei/PycharmProjects/TSLM/parser.py',167),
  ('Class -> CLASS ClassIdentifier BlockBody END','Class',4,'p_Class','/Users/tianqilei/PycharmProjects/TSLM/parser.py',170),
  ('Block -> BLOCK BlockIdentifier BlockBody END','Block',4,'p_Block','/Users/tianqilei/PycharmProjects/TSLM/parser.py',174),
  ('Model -> Block','Model',1,'p_Model','/Users/tianqilei/PycharmProjects/TSLM/parser.py',177),
  ('Model -> Class','Model',1,'p_Model','/Users/tianqilei/PycharmProjects/TSLM/parser.py',178),
  ('Model -> empty','Model',1,'p_Model','/Users/tianqilei/PycharmProjects/TSLM/parser.py',179),
]
